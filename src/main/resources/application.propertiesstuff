
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://mysql-docker-container:3306/pos?serverTimezone=EST5EDT
#spring.datasource.url=jdbc:mysql://localhost:3306/pos?serverTimezone=EST5EDT
#spring.datasource.username=gichelli
spring.datasource.username=gichelli
spring.datasource.password=password

#remove below to use sql located in database, whenever used this the tables get deleted

spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.generate-ddl=true

spring.jpa.show-sql=true
spring.jpa.hibernate.naming.implicit-strategy=-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.data.jpa.repositories.enabled=true

spring.datasource.platform=mysql
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.initialization-mode=always
-----
version: "3"
services:
  mysql-docker-container:
    
    image: mysql:5.7
    ports: 
      - "3306:3306"
    #url: jdbc:mysql://mysql-docker-container:3306/pos?serverTimezone=EST5EDT
    environment:  
      dialect: org.hibernate.dialect.MySQL55Dialect
      database-platform: org.hibernate.dialect.MySQL55D ialect
    #hibernate:
      generate-ddl: "true"
      MYSQL_ROOT_PASSWORD: password
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: pos
      MYSQL_USER: gichelli
      MYSQL_PASSWORD: password 
      ddl-auto: create
     
     
    restart: always
    
  
  #jpa:
    #database-platform: org.hibernate.dialect.MySQL55Dialect
    #database: mysql
    #show-sql: true
    #hibernate:
      #ddl-auto: create-drop
    
#    volumes:
#      - /data/mysql

    #volumes:
    #  - /data/mysql
#    networks:
#      - foo 
  spring-boot-jpa-app:
    image: spring-boot-jpa-image
    build:
      context: ./
      dockerfile: Dockerfile
    command: mvn clean spring-boot:run
    depends_on:
      - mysql-docker-container
      
    
    ports: 
      - "8087:8080"
    expose:
      - "8080"
#    networks:
#      - foo
    restart: always
    #environment:
     # ddl-auto: create
      #database-platform: org.hibernate.dialect.MySQL55Dialect
    #hibernate:
      #generate-ddl: "true"
    
#    volumes:
#      - /data/spring-boot-app
    #srestart: unless-stopped
    #volumes:
     # - /data/spring-boot-app
      
#networks:
#  pos_network:
#    driver: bridge

      
networks:
  foo:
    external: true

    

